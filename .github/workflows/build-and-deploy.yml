name: Build and deploy to GCP

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
  SVC_ACCOUNT_NAME: github-deploy
  SVC_ACCOUNT_EMAIL: github-deploy@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com
  PREDICTION_ENGINE_URL: ${{ secrets.CLUSTERING_ENGINE_URL }}
  DOCKER_REPO: my-repo
  DOCKER_IMAGE: homepage
  CLOUD_RUN_SERVICE: homepage
  REGION: europe-central2

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest 

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3 

    - name: Authenticate to Google Cloud
      env:
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" | base64 --decode | gcloud auth activate-service-account ${{ env.SVC_ACCOUNT_EMAIL}} --key-file=-
        gcloud config set project ${{ env.PROJECT_ID }}
        gcloud config set run/region ${{ env.REGION }}

    - name: Authenticate Docker for Google Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Build and Tag Docker Image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }} .
        docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }} ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }}:latest 

    - name: Push Docker Image to Google Artifact Registry
      run: |
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }}:latest 

    - name: Update Cloud Run Service
      run: |
        gcloud run services update ${{ env.CLOUD_RUN_SERVICE }} \
          --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.DOCKER_REPO }}/${{ env.DOCKER_IMAGE }}:latest \
          --region=${{ env.REGION }}

